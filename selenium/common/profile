# Put the name for this environment (e.g. PHP-FPM 7.2) into this file:
dispEnv="/etc/dshell/display-environment"
if [ -f "$dispEnv" ]; then
    DISPLAY_ENVIRONMENT=$(cat $dispEnv)
fi


# If default user, change to start dir:
if [ "$USER" == $(cat /etc/dshell/default-user) ]; then
    START_DIR_FILE=/etc/dshell/default-user-start-dir
    if [ -f $START_DIR_FILE ]; then
        cd $(cat $START_DIR_FILE)
    fi
fi


# Get current branch in git repo
function parse_git_branch()
{
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "${BRANCH}${STAT}"
	else
		echo "no branch"
	fi
}


# Get current status of git repo
function parse_git_dirty
{
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}

# Color helpers
NO_COLOR="\[\e[0m\]"
   BLACK="\[\e[0;30m\]"
  D_BLUE="\[\e[0;34m\]"
  L_BLUE="\[\e[1;34m\]"
 D_GREEN="\[\e[0;32m\]"
 L_GREEN="\[\e[1;32m\]"
  D_CYAN="\[\e[0;36m\]"
  L_CYAN="\[\e[1;36m\]"
   D_RED="\[\e[0;31m\]"
   L_RED="\[\e[1;31m\]"
D_PURPLE="\[\e[0;35m\]"
L_PURPLE="\[\e[1;35m\]"
   BROWN="\[\e[0;33m\]"
  YELLOW="\[\e[1;33m\]"
    GRAY="\[\e[0;37m\]"
   WHITE="\[\e[1;37m\]"

if [ "$DISPLAY_ENVIRONMENT" != "" ]; then
    PROMPT_EXTRA="${D_PURPLE}${DISPLAY_ENVIRONMENT} ${NO_COLOR}\A "
else
    PROMPT_EXTRA="\A "
fi

# Determine user colors
if [ $UID == 0 ]; then
    dColor=$D_RED
    lColor=$L_RED
else
    dColor=$D_CYAN
    lColor=$L_CYAN
fi

# Build prompt
export PS1="\
${NO_COLOR}(${PROMPT_EXTRA}[\`parse_git_branch\`])\n\
${lColor}[${dColor}\u${lColor}@${dColor}\h${lColor}] ${YELLOW}\w ${WHITE}$ ${NO_COLOR}"

# It's nice if ls is in color
alias ls='ls --color=auto'

